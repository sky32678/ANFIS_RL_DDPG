import numpy as np
import copy
def test_8_shape():
    path = [[0.0, 0.0], [0.7765, -.1022], [1.5000, -0.4019], [2.1213, -0.8787],
            [2.5981, -1.5000], [2.8978, -2.2235], [3.0, -3.0],
            [2.8978, -3.7765], [2.5981, -4.5], [2.1213, -5.1213],
            [1.5, -5.5981], [0.7765, -5.8978], [0.0, -6], [-0.7665, -5.8978],
            [-1.5, -5.5981], [-2.1213, -5.1213], [-2.5981, -4.5000],
            [-2.8978, -3.7765], [-3, -3], [-2.8978, -2.2235],
            [-2.5981, -1.5], [-2.1213, -0.8787], [-1.5, -0.4019],
            [-0.7765, -.1022], [0.0, -0.], [0.7654, 0.1522],
            [1.4142, 0.5858], [1.8478, 1.2346], [2, 2],
            [1.8478, 2.7654], [1.4142, 3.4142], [0.7654, 3.8478],
            [0, 4], [-0.7654, 3.8478], [-1.4142, 3.4142],
            [-1.8478, 2.7654], [-2, 2], [-1.8478, 1.2346],
            [-1.4142, 0.5858], [-0.7654, 0.1522], [0.0000000001, 0.00000000001],
            [0.0000, 0.000]]
    return path

def test_course1():
    path = [ [0,0],
    [5,0],
    [5,-5],
    [10,-5],
    [10,5],
    [15,5],
    [15,0],
    [20,0]
    ]
    return path
def test_course2():
    path = [
    [     0 ,        0],
    [14.7800,         0],
    [15.6427,   -0.3573],
    [16.0000,   -1.2200],
    [16.0000,   -4.7800],
    [15.6427,   -5.6427],
    [14.7800,   -6.0000],
    [1.2200 ,  -6.0000],
    [0.3573 ,  -6.3573],
    [0.0000 ,  -7.2200],
    [0.0000 , -10.7800],
    [0.3573 , -11.6427],
    [1.2200 , -12.0000],
    [14.7800,  -12.0000],
    [15.6427,  -12.3573],
    [16.0000,  -13.2200],
    [16.0000,  -16.7800],
    [15.6427,  -17.6427],
    [14.7800,  -18.0000],
    [-3.7800,  -18.0000],
    [-4.6427,  -17.6427],
    [-5.0000,  -16.7800],
    [-5.0000,   -1.2200],
    [-4.6427,   -0.3573],
    [-3.7800,         0],
    [     0 ,        0]

    ]
    return path


def test_course():
    path = [
        [0.0, 0.0],
        [1.0000  ,       0],
        [1.7000,   -0.1876],
        [2.2124,   -0.7000],
        [2.4000,   -1.4000],
        [2.5876,   -2.1000],
        [3.1000,   -2.6124],
        [3.8000,   -2.8000],
        [4.5000,   -2.6124],
        [5.0124,   -2.1000],
        [5.2000,   -1.4000],
        [5.3876,   -0.7000],
        [5.9000,   -0.1876],
        [6.6000,         0],
        [7.3000,   -0.1876],
        [7.8124,   -0.7000],
        [8.0000,   -1.4000],
        [8.1876,   -2.1000],
        [8.7000,   -2.6124],
        [9.4000,   -2.8000],
       [10.1000,   -2.6124],
       [10.6124,   -2.1000],
       [10.8000,   -1.4000],
       [10.9876,   -0.7000],
       [11.5000,   -0.1876],
       [12.2000,         0],
       [12.9000,   -0.1876],
       [13.4124,   -0.7000],
       [13.6000,   -1.4000],
       [13.7876,   -2.1000],
       [14.3000,   -2.6124],
       [15.0000,   -2.8000],
       [16.0000,   -2.8000] ]
#    path = [[0.0, 0.0],[2.0, 0.0], [2.0, 2.0], [4.0, 2.0]]
    return path

def test_course3():
    path = [
        [0.0, 0.0],
        [1.0000  ,       0],
        [1.7000,   -0.1876],
        [2.2124,   -0.7000],
        [2.4000,   -1.4000],
        [2.5876,   -2.1000],
        [3.1000,   -2.6124],
        [3.8000,   -2.8000],
        [4.5000,   -2.6124],
        [5.0124,   -2.1000],
        [5.2000,   -1.4000],
        [5.3876,   -0.7000],
        [5.9000,   -0.1876],
        [6.6000,         0],
        [7.3000,   -0.1876],
        [7.8124,   -0.7000],
        [8.0000,   -1.4000],
        [8.1876,   -2.1000],
        [8.7000,   -2.6124],
        [9.4000,   -2.8000],
       [10.1000,   -2.6124],
       [10.6124,   -2.1000],
       [10.8000,   -1.4000],
       [10.9876,   -0.7000],
       [11.5000,   -0.1876],
       [12.2000,         0],
       [12.9000,   -0.1876],
       [13.4124,   -0.7000],
       [13.6000,   -1.4000],
       [13.7876,   -2.1000],
       [14.3000,   -2.6124],
       [15.0000,   -2.8000],
       [16.0000,   -2.8000] ]
#    path = [[0.0, 0.0],[2.0, 0.0], [2.0, 2.0], [4.0, 2.0]]

    path.append([16.7800,         0-2.8])
    path.append([17.6427,         -0.3573-2.8])
    path.append([18.0000,         -1.2200-2.8])

    path.append([18.0000,         -4.78])
    path.append([17.6427,         -5.6427])
    path.append([16.7800,         -6.00])

    path.append([-3.78+0.5,         -6.00])
    path.append([-4.6427+0.5,         -5.6427])
    path.append([-5.0+0.5,         -4.78])

    path.append([-5.00+0.5,         -1.22])
    path.append([-4.6427+0.5,         -0.3573])
    path.append([-3.78+0.5,         0])
    path.append([-0.5,         0])
    return path

def new_test_course_r_1():
    path = [
        [0.0000, 0.0000],
        [3.0000-2.0, 0.0000],
        [3.3827-2.0,   -0.0761],
        [3.7071-2.0,   -0.2929],
        [3.9239-2.0,   -0.6173],
        [4.0000-2.0,   -1.0000],
        [4.0761-2.0,   -1.3827],
        [4.2929-2.0,   -1.7071],
        [4.6173-2.0,   -1.9239],
        [5.0000-2.0,   -2.0000],
        [5.3827-2.0,   -1.9239],
        [5.7071-2.0,   -1.7071],
        [5.9239-2.0,   -1.3827],
        [6.0000-2.0,   -1.0000],
        [6.0761-2.0,   -0.6173],
        [6.2929-2.0,   -0.2929],
        [6.6173-2.0,   -0.0761],
        [7.0000-2.0,         0],
        [7.3827-2.0,   -0.0761],
        [7.7071-2.0,   -0.2929],
        [7.9239-2.0,   -0.6173],
        [8.0000-2.0,   -1.0000],
        [8.0000-2.0,   -3.5000],
        [0.0000,   -3.5000],
        [0.0000,    0.0000]
        ]
    return path
def new_test_course_r_0_5():
    path = [
        [0.0000, 0.0000],
        [4.5000-3.0,         0],
        [4.6913-3.0,   -0.0381],
        [4.8536-3.0,   -0.1464],
        [4.9619-3.0,   -0.3087],
        [5.0000-3.0,   -0.5000],
        [5.0381-3.0,   -0.6913],
        [5.1464-3.0,   -0.8536],
        [5.3087-3.0,  -0.9619],
        [5.5000-3.0,   -1.0000],
        [5.6913-3.0,   -0.9619],
        [5.8536-3.0,   -0.8536],
        [5.9619-3.0,   -0.6913],
        [6.0000-3.0,   -0.5000],
        [6.0381-3.0,   -0.3087],
        [6.1464-3.0,   -0.1464],
        [6.3087-3.0,   -0.0381],
        [6.5000-3.0,         0],
        [6.6913-3.0,   -0.0381],
        [6.8536-3.0,   -0.1464],
        [6.9619-3.0,   -0.3087],
        [7.0000-3.0,   -0.5000],
        [7.0000-3.0,   -2.0000],
        [0.0000,  -2.0000],
        [0.0000,   0.0000]
        ]
    return path

def long_sin_test_course():
    path1 = np.array(test_course())
    path = np.array(test_course())
    for i in range(1):
        path[:,1] = (path[:,1] + 2.8) * -1
        path[:,0] = (path[:,0] + path[len(path)-1][0])
        temp = np.append(path1, path, axis=0)
        path = temp
    for i in range(3):
        hold = copy.deepcopy(temp)
        hold[:,0] = (hold[:,0] + temp[len(temp)-1][0])
        temp = np.append(temp, hold,axis=0)
    return temp.tolist()
